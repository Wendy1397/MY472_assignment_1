# load in libraries:
suppressMessages(library(tidyverse))
# or just library(tidyverse)
# read ip_and_unemployment.csv
ip_and_unemployment <- read.csv("ip_and_unemployment.csv")
head(ip_and_unemployment)
data("BOD")
head()
data("BOD")
head("BOD")
View(BOD)
ex_data <- data("fruit")
head(ex_data)
ex_data <- data("band_instruments")
head(ex_data)
View(band_instruments)
ex_data <- data("billboard")
head(ex_data)
View(billboard)
pivot_longer(contains(wk, ignore.case = TRUE, vars = NULL), names_to = "week", values_to = "sales")
pivot_longer(contains("wk", ignore.case = TRUE, vars = NULL), names_to = "week", values_to = "sales")
ex_data <- data("billboard")
head(ex_data)
# The data set is not tidy. It shows the sales on the billboard in the 47 weeks after it entered into the market. The sales is a variable and it has 47 observations in the 47 weeks. To make each variable has its own column and each contains observation has its own row. I would pivot the columns into a new pair of variables.
pivot_longer(select(contains("wk", ignore.case = TRUE, vars = NULL)), names_to = "week", values_to = "sales")
ex_data <- data("billboard")
head(ex_data)
# The data set is not tidy. It shows the sales on the billboard in the 47 weeks after it entered into the market. The sales is a variable and it has 47 observations in the 47 weeks. To make each variable has its own column and each contains observation has its own row. I would pivot the columns into a new pair of variables.
pivot_longer(cols=contains("wk", ignore.case = TRUE, vars = NULL), names_to = "week", values_to = "sales")
pivot_longer(cols=contains("wk"), names_to = "week", values_to = "sales")
pivot_longer(cols=start_with("wk"), names_to = "week", values_to = "sales")
ex_data <- data("billboard")
head(ex_data)
# The data set is not tidy. It shows the sales on the billboard in the 47 weeks after it entered into the market. The sales is a variable and it has 47 observations in the 47 weeks. To make each variable has its own column and each contains observation has its own row. I would pivot the columns into a new pair of variables.
pivot_longer(cols=starts_with("wk"), names_to = "week", values_to = "sales")
View(billboard)
tidy_billboard <- billboard %>%
select(artist, track, date.entered,conatins("wk")
pivot_longer(cols=contains("wk"), names_to = "week", values_to = "sales")
ex_data <- data("billboard")
head(ex_data)
# The data set is not tidy. It shows the sales on the billboard in the 47 weeks after it entered into the market. The sales is a variable and it has 47 observations in the 47 weeks. To make each variable has its own column and each contains observation has its own row. I would pivot the columns into a new pair of variables.
tidy_billboard <- billboard %>%
select(artist, track, date.entered, conatins("wk")
pivot_longer(cols=contains("wk"), names_to = "week", values_to = "sales")
tidy_billboard <- billboard %>%
select(artist, track, date.entered, conatins("wk")%>%
pivot_longer(cols=contains("wk"), names_to = "week", values_to = "sales")
head(tidy_billboard)
ex_data <- data("billboard")
head(ex_data)
# The data set is not tidy. It shows the sales on the billboard in the 47 weeks after it entered into the market. The sales is a variable and it has 47 observations in the 47 weeks. To make each variable has its own column and each contains observation has its own row. I would pivot the columns into a new pair of variables.
tidy_billboard <- billboard %>%
select(artist, track, date.entered, conatins("wk")%>%
pivot_longer(cols=contains("wk"), names_to = "week", values_to = "sales")
head(tidy_billboard)
ex_data <- data("billboard")
head(ex_data)
# The data set is not tidy. It shows the sales on the billboard in the 47 weeks after it entered into the market. The sales is a variable and it has 47 observations in the 47 weeks. To make each variable has its own column and each contains observation has its own row. I would pivot the columns into a new pair of variables.
tidy_billboard <- billboard %>%
select(Track, Artist, Year, contains("wk")) %>%
pivot_longer(cols = contains("wk"),  # Select the columns to pivot
names_to = "Week",         # Name for the new column
values_to = "Rank")        # Name for the values column
tidy_billboard <- billboard %>%
select(Track, Artist, Year) %>%
pivot_longer(cols = contains("wk"),  # Select the columns to pivot
names_to = "Week",         # Name for the new column
values_to = "Rank")        # Name for the values column
tidy_billboard <- billboard %>%
select(track, artist, date.entered) %>%
pivot_longer(cols = contains("wk"),  # Select the columns to pivot
names_to = "Week",         # Name for the new column
values_to = "Rank")        # Name for the values column
# this chunk contains code that sets global options for the entire .Rmd.
# we use include=FALSE to suppress it from the top of the document, but it will still appear in the appendix.
knitr::opts_chunk$set(echo = FALSE) # actually set the global chunk options.
# we set echo=FALSE to suppress code such that it by default does not appear throughout the document.
# note: this is different from .Rmd default
suppressMessages(library(tidyverse))
ex_data <- data("billboard")
head(ex_data)
# The data set is not tidy. It shows the sales on the billboard in the 47 weeks after it entered into the market. The sales is a variable and it has 47 observations in the 47 weeks. To make each variable has its own column and each contains observation has its own row. I would pivot the columns into a new pair of variables.
tidy_billboard <- billboard %>%
select(artist, track, date.entered,contains("wk")%>%
pivot_longer(cols=contains("wk"), names_to = "week", values_to = "sales")
head(tidy_billboard)
View(billboard)
View(billboard)
